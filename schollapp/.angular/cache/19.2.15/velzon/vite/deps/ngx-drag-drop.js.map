{
  "version": 3,
  "sources": ["../../../../../../node_modules/ngx-drag-drop/fesm2022/ngx-drag-drop.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { forwardRef, inject, ElementRef, Directive, EventEmitter, Renderer2, NgZone, Input, Output, HostBinding, HostListener, ContentChild, NgModule } from '@angular/core';\nconst DROP_EFFECTS = ['move', 'copy', 'link'];\nconst CUSTOM_MIME_TYPE = 'application/x-dnd';\nconst JSON_MIME_TYPE = 'application/json';\nconst MSIE_MIME_TYPE = 'Text';\nfunction mimeTypeIsCustom(mimeType) {\n  return mimeType.substr(0, CUSTOM_MIME_TYPE.length) === CUSTOM_MIME_TYPE;\n}\nfunction getWellKnownMimeType(event) {\n  if (event.dataTransfer) {\n    const types = event.dataTransfer.types;\n    // IE 9 workaround.\n    if (!types) {\n      return MSIE_MIME_TYPE;\n    }\n    for (let i = 0; i < types.length; i++) {\n      if (types[i] === MSIE_MIME_TYPE || types[i] === JSON_MIME_TYPE || mimeTypeIsCustom(types[i])) {\n        return types[i];\n      }\n    }\n  }\n  return null;\n}\nfunction setDragData(event, data, effectAllowed) {\n  // Internet Explorer and Microsoft Edge don't support custom mime types, see design doc:\n  // https://github.com/marceljuenemann/angular-drag-and-drop-lists/wiki/Data-Transfer-Design\n  const mimeType = CUSTOM_MIME_TYPE + (data.type ? '-' + data.type : '');\n  const dataString = JSON.stringify(data);\n  try {\n    event.dataTransfer?.setData(mimeType, dataString);\n  } catch (e) {\n    //   Setting a custom MIME type did not work, we are probably in IE or Edge.\n    try {\n      event.dataTransfer?.setData(JSON_MIME_TYPE, dataString);\n    } catch (e) {\n      //   We are in Internet Explorer and can only use the Text MIME type. Also note that IE\n      //   does not allow changing the cursor in the dragover event, therefore we have to choose\n      //   the one we want to display now by setting effectAllowed.\n      const effectsAllowed = filterEffects(DROP_EFFECTS, effectAllowed);\n      if (event.dataTransfer) {\n        event.dataTransfer.effectAllowed = effectsAllowed[0];\n      }\n      event.dataTransfer?.setData(MSIE_MIME_TYPE, dataString);\n    }\n  }\n}\nfunction getDropData(event, dragIsExternal) {\n  // check if the mime type is well known\n  const mimeType = getWellKnownMimeType(event);\n  // drag did not originate from [dndDraggable]\n  if (dragIsExternal === true) {\n    if (mimeType !== null && mimeTypeIsCustom(mimeType)) {\n      // the type of content is well known and safe to handle\n      return JSON.parse(event.dataTransfer?.getData(mimeType) ?? '{}');\n    }\n    // the contained data is unknown, let user handle it\n    return {};\n  }\n  if (mimeType !== null) {\n    // the type of content is well known and safe to handle\n    return JSON.parse(event.dataTransfer?.getData(mimeType) ?? '{}');\n  }\n  // the contained data is unknown, let user handle it\n  return {};\n}\nfunction filterEffects(effects, allowed) {\n  if (allowed === 'all' || allowed === 'uninitialized') {\n    return effects;\n  }\n  return effects.filter(function (effect) {\n    return allowed.toLowerCase().indexOf(effect) !== -1;\n  });\n}\nfunction getDirectChildElement(parentElement, childElement) {\n  let directChild = childElement;\n  while (directChild.parentNode !== parentElement) {\n    // reached root node without finding given parent\n    if (!directChild.parentNode) {\n      return null;\n    }\n    directChild = directChild.parentNode;\n  }\n  return directChild;\n}\nfunction shouldPositionPlaceholderBeforeElement(event, element, horizontal) {\n  const bounds = element.getBoundingClientRect();\n  // If the pointer is in the upper half of the list item element,\n  // we position the placeholder before the list item, otherwise after it.\n  if (horizontal) {\n    return event.clientX < bounds.left + bounds.width / 2;\n  }\n  return event.clientY < bounds.top + bounds.height / 2;\n}\nfunction calculateDragImageOffset(event, dragImage) {\n  const dragImageComputedStyle = window.getComputedStyle(dragImage);\n  const paddingTop = parseFloat(dragImageComputedStyle.paddingTop) || 0;\n  const paddingLeft = parseFloat(dragImageComputedStyle.paddingLeft) || 0;\n  const borderTop = parseFloat(dragImageComputedStyle.borderTopWidth) || 0;\n  const borderLeft = parseFloat(dragImageComputedStyle.borderLeftWidth) || 0;\n  return {\n    x: event.offsetX + paddingLeft + borderLeft,\n    y: event.offsetY + paddingTop + borderTop\n  };\n}\nfunction setDragImage(event, dragImage, offsetFunction) {\n  const offset = offsetFunction(event, dragImage) || {\n    x: 0,\n    y: 0\n  };\n  event.dataTransfer.setDragImage(dragImage, offset.x, offset.y);\n}\nconst _dndState = {\n  isDragging: false,\n  dropEffect: 'none',\n  effectAllowed: 'all',\n  type: undefined\n};\nfunction startDrag(event, effectAllowed, type) {\n  _dndState.isDragging = true;\n  _dndState.dropEffect = 'none';\n  _dndState.effectAllowed = effectAllowed;\n  _dndState.type = type;\n  if (event.dataTransfer) {\n    event.dataTransfer.effectAllowed = effectAllowed;\n  }\n}\nfunction endDrag() {\n  _dndState.isDragging = false;\n  _dndState.dropEffect = undefined;\n  _dndState.effectAllowed = undefined;\n  _dndState.type = undefined;\n}\nfunction setDropEffect(event, dropEffect) {\n  if (_dndState.isDragging === true) {\n    _dndState.dropEffect = dropEffect;\n  }\n  if (event.dataTransfer) {\n    event.dataTransfer.dropEffect = dropEffect;\n  }\n}\nfunction getDropEffect(event, effectAllowed) {\n  const dataTransferEffectAllowed = event.dataTransfer ? event.dataTransfer.effectAllowed : 'uninitialized';\n  let effects = filterEffects(DROP_EFFECTS, dataTransferEffectAllowed);\n  if (_dndState.isDragging === true) {\n    effects = filterEffects(effects, _dndState.effectAllowed);\n  }\n  if (effectAllowed) {\n    effects = filterEffects(effects, effectAllowed);\n  }\n  // MacOS automatically filters dataTransfer.effectAllowed depending on the modifier keys,\n  // therefore the following modifier keys will only affect other operating systems.\n  if (effects.length === 0) {\n    return 'none';\n  }\n  if (event.ctrlKey && effects.indexOf('copy') !== -1) {\n    return 'copy';\n  }\n  if (event.altKey && effects.indexOf('link') !== -1) {\n    return 'link';\n  }\n  return effects[0];\n}\nfunction getDndType(event) {\n  if (_dndState.isDragging === true) {\n    return _dndState.type;\n  }\n  const mimeType = getWellKnownMimeType(event);\n  if (mimeType === null) {\n    return undefined;\n  }\n  if (mimeType === MSIE_MIME_TYPE || mimeType === JSON_MIME_TYPE) {\n    return undefined;\n  }\n  return mimeType.substr(CUSTOM_MIME_TYPE.length + 1) || undefined;\n}\nfunction isExternalDrag() {\n  return _dndState.isDragging === false;\n}\nconst dndState = _dndState;\nclass DndDragImageRefDirective {\n  dndDraggableDirective = inject(forwardRef(() => DndDraggableDirective));\n  elementRef = inject(ElementRef);\n  ngOnInit() {\n    this.dndDraggableDirective.registerDragImage(this.elementRef);\n  }\n  static ɵfac = function DndDragImageRefDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DndDragImageRefDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DndDragImageRefDirective,\n    selectors: [[\"\", \"dndDragImageRef\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndDragImageRefDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[dndDragImageRef]',\n      standalone: true\n    }]\n  }], null, null);\n})();\nclass DndDraggableDirective {\n  dndDraggable;\n  dndEffectAllowed = 'copy';\n  dndType;\n  dndDraggingClass = 'dndDragging';\n  dndDraggingSourceClass = 'dndDraggingSource';\n  dndDraggableDisabledClass = 'dndDraggableDisabled';\n  dndDragImageOffsetFunction = calculateDragImageOffset;\n  dndStart = new EventEmitter();\n  dndDrag = new EventEmitter();\n  dndEnd = new EventEmitter();\n  dndMoved = new EventEmitter();\n  dndCopied = new EventEmitter();\n  dndLinked = new EventEmitter();\n  dndCanceled = new EventEmitter();\n  draggable = true;\n  dndHandle;\n  dndDragImageElementRef;\n  dragImage;\n  isDragStarted = false;\n  elementRef = inject(ElementRef);\n  renderer = inject(Renderer2);\n  ngZone = inject(NgZone);\n  set dndDisableIf(value) {\n    this.draggable = !value;\n    if (this.draggable) {\n      this.renderer.removeClass(this.elementRef.nativeElement, this.dndDraggableDisabledClass);\n    } else {\n      this.renderer.addClass(this.elementRef.nativeElement, this.dndDraggableDisabledClass);\n    }\n  }\n  set dndDisableDragIf(value) {\n    this.dndDisableIf = value;\n  }\n  ngAfterViewInit() {\n    this.ngZone.runOutsideAngular(() => {\n      this.elementRef.nativeElement.addEventListener('drag', this.dragEventHandler);\n    });\n  }\n  ngOnDestroy() {\n    this.elementRef.nativeElement.removeEventListener('drag', this.dragEventHandler);\n    if (this.isDragStarted) {\n      endDrag();\n    }\n  }\n  onDragStart(event) {\n    if (!this.draggable) {\n      return false;\n    }\n    // check if there is dnd handle and if the dnd handle was used to start the drag\n    if (this.dndHandle != null && event._dndUsingHandle == null) {\n      event.stopPropagation();\n      return false;\n    }\n    // initialize global state\n    startDrag(event, this.dndEffectAllowed, this.dndType);\n    this.isDragStarted = true;\n    setDragData(event, {\n      data: this.dndDraggable,\n      type: this.dndType\n    }, dndState.effectAllowed);\n    this.dragImage = this.determineDragImage();\n    // set dragging css class prior to setDragImage so styles are applied before\n    // TODO breaking change: add class to elementRef rather than drag image which could be another element\n    this.renderer.addClass(this.dragImage, this.dndDraggingClass);\n    // set custom dragimage if present\n    // set dragimage if drag is started from dndHandle\n    if (this.dndDragImageElementRef != null || event._dndUsingHandle != null) {\n      setDragImage(event, this.dragImage, this.dndDragImageOffsetFunction);\n    }\n    // add dragging source css class on first drag event\n    const unregister = this.renderer.listen(this.elementRef.nativeElement, 'drag', () => {\n      this.renderer.addClass(this.elementRef.nativeElement, this.dndDraggingSourceClass);\n      unregister();\n    });\n    this.dndStart.emit(event);\n    event.stopPropagation();\n    setTimeout(() => {\n      this.renderer.setStyle(this.dragImage, 'pointer-events', 'none');\n    }, 100);\n    return true;\n  }\n  onDrag(event) {\n    this.dndDrag.emit(event);\n  }\n  onDragEnd(event) {\n    if (!this.draggable || !this.isDragStarted) {\n      return;\n    }\n    // get drop effect from custom stored state as its not reliable across browsers\n    const dropEffect = dndState.dropEffect;\n    this.renderer.setStyle(this.dragImage, 'pointer-events', 'unset');\n    let dropEffectEmitter;\n    switch (dropEffect) {\n      case 'copy':\n        dropEffectEmitter = this.dndCopied;\n        break;\n      case 'link':\n        dropEffectEmitter = this.dndLinked;\n        break;\n      case 'move':\n        dropEffectEmitter = this.dndMoved;\n        break;\n      default:\n        dropEffectEmitter = this.dndCanceled;\n        break;\n    }\n    dropEffectEmitter.emit(event);\n    this.dndEnd.emit(event);\n    // reset global state\n    endDrag();\n    this.isDragStarted = false;\n    this.renderer.removeClass(this.dragImage, this.dndDraggingClass);\n    // IE9 special hammering\n    window.setTimeout(() => {\n      this.renderer.removeClass(this.elementRef.nativeElement, this.dndDraggingSourceClass);\n    }, 0);\n    event.stopPropagation();\n  }\n  registerDragHandle(handle) {\n    this.dndHandle = handle;\n  }\n  registerDragImage(elementRef) {\n    this.dndDragImageElementRef = elementRef;\n  }\n  dragEventHandler = event => this.onDrag(event);\n  determineDragImage() {\n    // evaluate custom drag image existence\n    if (typeof this.dndDragImageElementRef !== 'undefined') {\n      return this.dndDragImageElementRef.nativeElement;\n    } else {\n      return this.elementRef.nativeElement;\n    }\n  }\n  static ɵfac = function DndDraggableDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DndDraggableDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DndDraggableDirective,\n    selectors: [[\"\", \"dndDraggable\", \"\"]],\n    hostVars: 1,\n    hostBindings: function DndDraggableDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"dragstart\", function DndDraggableDirective_dragstart_HostBindingHandler($event) {\n          return ctx.onDragStart($event);\n        })(\"dragend\", function DndDraggableDirective_dragend_HostBindingHandler($event) {\n          return ctx.onDragEnd($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"draggable\", ctx.draggable);\n      }\n    },\n    inputs: {\n      dndDraggable: \"dndDraggable\",\n      dndEffectAllowed: \"dndEffectAllowed\",\n      dndType: \"dndType\",\n      dndDraggingClass: \"dndDraggingClass\",\n      dndDraggingSourceClass: \"dndDraggingSourceClass\",\n      dndDraggableDisabledClass: \"dndDraggableDisabledClass\",\n      dndDragImageOffsetFunction: \"dndDragImageOffsetFunction\",\n      dndDisableIf: \"dndDisableIf\",\n      dndDisableDragIf: \"dndDisableDragIf\"\n    },\n    outputs: {\n      dndStart: \"dndStart\",\n      dndDrag: \"dndDrag\",\n      dndEnd: \"dndEnd\",\n      dndMoved: \"dndMoved\",\n      dndCopied: \"dndCopied\",\n      dndLinked: \"dndLinked\",\n      dndCanceled: \"dndCanceled\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndDraggableDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[dndDraggable]',\n      standalone: true\n    }]\n  }], null, {\n    dndDraggable: [{\n      type: Input\n    }],\n    dndEffectAllowed: [{\n      type: Input\n    }],\n    dndType: [{\n      type: Input\n    }],\n    dndDraggingClass: [{\n      type: Input\n    }],\n    dndDraggingSourceClass: [{\n      type: Input\n    }],\n    dndDraggableDisabledClass: [{\n      type: Input\n    }],\n    dndDragImageOffsetFunction: [{\n      type: Input\n    }],\n    dndStart: [{\n      type: Output\n    }],\n    dndDrag: [{\n      type: Output\n    }],\n    dndEnd: [{\n      type: Output\n    }],\n    dndMoved: [{\n      type: Output\n    }],\n    dndCopied: [{\n      type: Output\n    }],\n    dndLinked: [{\n      type: Output\n    }],\n    dndCanceled: [{\n      type: Output\n    }],\n    draggable: [{\n      type: HostBinding,\n      args: ['attr.draggable']\n    }],\n    dndDisableIf: [{\n      type: Input\n    }],\n    dndDisableDragIf: [{\n      type: Input\n    }],\n    onDragStart: [{\n      type: HostListener,\n      args: ['dragstart', ['$event']]\n    }],\n    onDragEnd: [{\n      type: HostListener,\n      args: ['dragend', ['$event']]\n    }]\n  });\n})();\nclass DndPlaceholderRefDirective {\n  elementRef;\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n  }\n  ngOnInit() {\n    // placeholder has to be \"invisible\" to the cursor, or it would interfere with the dragover detection for the same dropzone\n    this.elementRef.nativeElement.style.pointerEvents = 'none';\n  }\n  static ɵfac = function DndPlaceholderRefDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DndPlaceholderRefDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DndPlaceholderRefDirective,\n    selectors: [[\"\", \"dndPlaceholderRef\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndPlaceholderRefDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[dndPlaceholderRef]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }], null);\n})();\nclass DndDropzoneDirective {\n  ngZone;\n  elementRef;\n  renderer;\n  dndDropzone = '';\n  dndEffectAllowed = 'uninitialized';\n  dndAllowExternal = false;\n  dndHorizontal = false;\n  dndDragoverClass = 'dndDragover';\n  dndDropzoneDisabledClass = 'dndDropzoneDisabled';\n  dndDragover = new EventEmitter();\n  dndDrop = new EventEmitter();\n  dndPlaceholderRef;\n  placeholder = null;\n  disabled = false;\n  constructor(ngZone, elementRef, renderer) {\n    this.ngZone = ngZone;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n  }\n  set dndDisableIf(value) {\n    this.disabled = value;\n    if (this.disabled) {\n      this.renderer.addClass(this.elementRef.nativeElement, this.dndDropzoneDisabledClass);\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, this.dndDropzoneDisabledClass);\n    }\n  }\n  set dndDisableDropIf(value) {\n    this.dndDisableIf = value;\n  }\n  ngAfterViewInit() {\n    this.placeholder = this.tryGetPlaceholder();\n    this.removePlaceholderFromDOM();\n    this.ngZone.runOutsideAngular(() => {\n      this.elementRef.nativeElement.addEventListener('dragenter', this.dragEnterEventHandler);\n      this.elementRef.nativeElement.addEventListener('dragover', this.dragOverEventHandler);\n      this.elementRef.nativeElement.addEventListener('dragleave', this.dragLeaveEventHandler);\n    });\n  }\n  ngOnDestroy() {\n    this.elementRef.nativeElement.removeEventListener('dragenter', this.dragEnterEventHandler);\n    this.elementRef.nativeElement.removeEventListener('dragover', this.dragOverEventHandler);\n    this.elementRef.nativeElement.removeEventListener('dragleave', this.dragLeaveEventHandler);\n  }\n  onDragEnter(event) {\n    // check if another dropzone is activated\n    if (event._dndDropzoneActive === true) {\n      this.cleanupDragoverState();\n      return;\n    }\n    // set as active if the target element is inside this dropzone\n    if (event._dndDropzoneActive == null) {\n      const newTarget = document.elementFromPoint(event.clientX, event.clientY);\n      if (this.elementRef.nativeElement.contains(newTarget)) {\n        event._dndDropzoneActive = true;\n      }\n    }\n    // check if this drag event is allowed to drop on this dropzone\n    const type = getDndType(event);\n    if (!this.isDropAllowed(type)) {\n      return;\n    }\n    // allow the dragenter\n    event.preventDefault();\n  }\n  onDragOver(event) {\n    // With nested dropzones, we want to ignore this event if a child dropzone\n    // has already handled a dragover.  Historically, event.stopPropagation() was\n    // used to prevent this bubbling, but that prevents any dragovers outside the\n    // ngx-drag-drop component, and stops other use cases such as scrolling on drag.\n    // Instead, we can check if the event was already prevented by a child and bail early.\n    if (event.defaultPrevented) {\n      return;\n    }\n    // check if this drag event is allowed to drop on this dropzone\n    const type = getDndType(event);\n    if (!this.isDropAllowed(type)) {\n      return;\n    }\n    this.checkAndUpdatePlaceholderPosition(event);\n    const dropEffect = getDropEffect(event, this.dndEffectAllowed);\n    if (dropEffect === 'none') {\n      this.cleanupDragoverState();\n      return;\n    }\n    // allow the dragover\n    event.preventDefault();\n    // set the drop effect\n    setDropEffect(event, dropEffect);\n    this.dndDragover.emit(event);\n    this.renderer.addClass(this.elementRef.nativeElement, this.dndDragoverClass);\n  }\n  onDrop(event) {\n    try {\n      // check if this drag event is allowed to drop on this dropzone\n      const type = getDndType(event);\n      if (!this.isDropAllowed(type)) {\n        return;\n      }\n      const data = getDropData(event, isExternalDrag());\n      if (!this.isDropAllowed(data.type)) {\n        return;\n      }\n      // signal custom drop handling\n      event.preventDefault();\n      const dropEffect = getDropEffect(event);\n      setDropEffect(event, dropEffect);\n      if (dropEffect === 'none') {\n        return;\n      }\n      const dropIndex = this.getPlaceholderIndex();\n      // if for whatever reason the placeholder is not present in the DOM but it should be there\n      // we don't allow/emit the drop event since it breaks the contract\n      // seems to only happen if drag and drop is executed faster than the DOM updates\n      if (dropIndex === -1) {\n        return;\n      }\n      this.dndDrop.emit({\n        event: event,\n        dropEffect: dropEffect,\n        isExternal: isExternalDrag(),\n        data: data.data,\n        index: dropIndex,\n        type: type\n      });\n      event.stopPropagation();\n    } finally {\n      this.cleanupDragoverState();\n    }\n  }\n  onDragLeave(event) {\n    event.preventDefault();\n    event.stopPropagation();\n    // check if still inside this dropzone and not yet handled by another dropzone\n    if (event._dndDropzoneActive == null) {\n      if (this.elementRef.nativeElement.contains(event.relatedTarget)) {\n        event._dndDropzoneActive = true;\n        return;\n      }\n    }\n    this.cleanupDragoverState();\n    // cleanup drop effect when leaving dropzone\n    setDropEffect(event, 'none');\n  }\n  dragEnterEventHandler = event => this.onDragEnter(event);\n  dragOverEventHandler = event => this.onDragOver(event);\n  dragLeaveEventHandler = event => this.onDragLeave(event);\n  isDropAllowed(type) {\n    // dropzone is disabled -> deny it\n    if (this.disabled) {\n      return false;\n    }\n    // if drag did not start from our directive\n    // and external drag sources are not allowed -> deny it\n    if (isExternalDrag() && !this.dndAllowExternal) {\n      return false;\n    }\n    // no filtering by types -> allow it\n    if (!this.dndDropzone) {\n      return true;\n    }\n    // no type set -> allow it\n    if (!type) {\n      return true;\n    }\n    if (!Array.isArray(this.dndDropzone)) {\n      throw new Error('dndDropzone: bound value to [dndDropzone] must be an array!');\n    }\n    // if dropzone contains type -> allow it\n    return this.dndDropzone.indexOf(type) !== -1;\n  }\n  tryGetPlaceholder() {\n    if (typeof this.dndPlaceholderRef !== 'undefined') {\n      return this.dndPlaceholderRef.elementRef.nativeElement;\n    }\n    // TODO nasty workaround needed because if ng-container / template is used @ContentChild() or DI will fail because\n    // of wrong context see angular bug https://github.com/angular/angular/issues/13517\n    return this.elementRef.nativeElement.querySelector('[dndPlaceholderRef]');\n  }\n  removePlaceholderFromDOM() {\n    if (this.placeholder !== null && this.placeholder.parentNode !== null) {\n      this.placeholder.parentNode.removeChild(this.placeholder);\n    }\n  }\n  checkAndUpdatePlaceholderPosition(event) {\n    if (this.placeholder === null) {\n      return;\n    }\n    // make sure the placeholder is in the DOM\n    if (this.placeholder.parentNode !== this.elementRef.nativeElement) {\n      this.renderer.appendChild(this.elementRef.nativeElement, this.placeholder);\n    }\n    // update the position if the event originates from a child element of the dropzone\n    const directChild = getDirectChildElement(this.elementRef.nativeElement, event.target);\n    // early exit if no direct child or direct child is placeholder\n    if (directChild === null || directChild === this.placeholder) {\n      return;\n    }\n    const positionPlaceholderBeforeDirectChild = shouldPositionPlaceholderBeforeElement(event, directChild, this.dndHorizontal);\n    if (positionPlaceholderBeforeDirectChild) {\n      // do insert before only if necessary\n      if (directChild.previousSibling !== this.placeholder) {\n        this.renderer.insertBefore(this.elementRef.nativeElement, this.placeholder, directChild);\n      }\n    } else {\n      // do insert after only if necessary\n      if (directChild.nextSibling !== this.placeholder) {\n        this.renderer.insertBefore(this.elementRef.nativeElement, this.placeholder, directChild.nextSibling);\n      }\n    }\n  }\n  getPlaceholderIndex() {\n    if (this.placeholder === null) {\n      return undefined;\n    }\n    const element = this.elementRef.nativeElement;\n    return Array.prototype.indexOf.call(element.children, this.placeholder);\n  }\n  cleanupDragoverState() {\n    this.renderer.removeClass(this.elementRef.nativeElement, this.dndDragoverClass);\n    this.removePlaceholderFromDOM();\n  }\n  static ɵfac = function DndDropzoneDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DndDropzoneDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DndDropzoneDirective,\n    selectors: [[\"\", \"dndDropzone\", \"\"]],\n    contentQueries: function DndDropzoneDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, DndPlaceholderRefDirective, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dndPlaceholderRef = _t.first);\n      }\n    },\n    hostBindings: function DndDropzoneDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"drop\", function DndDropzoneDirective_drop_HostBindingHandler($event) {\n          return ctx.onDrop($event);\n        });\n      }\n    },\n    inputs: {\n      dndDropzone: \"dndDropzone\",\n      dndEffectAllowed: \"dndEffectAllowed\",\n      dndAllowExternal: \"dndAllowExternal\",\n      dndHorizontal: \"dndHorizontal\",\n      dndDragoverClass: \"dndDragoverClass\",\n      dndDropzoneDisabledClass: \"dndDropzoneDisabledClass\",\n      dndDisableIf: \"dndDisableIf\",\n      dndDisableDropIf: \"dndDisableDropIf\"\n    },\n    outputs: {\n      dndDragover: \"dndDragover\",\n      dndDrop: \"dndDrop\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndDropzoneDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[dndDropzone]',\n      standalone: true\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.Renderer2\n  }], {\n    dndDropzone: [{\n      type: Input\n    }],\n    dndEffectAllowed: [{\n      type: Input\n    }],\n    dndAllowExternal: [{\n      type: Input\n    }],\n    dndHorizontal: [{\n      type: Input\n    }],\n    dndDragoverClass: [{\n      type: Input\n    }],\n    dndDropzoneDisabledClass: [{\n      type: Input\n    }],\n    dndDragover: [{\n      type: Output\n    }],\n    dndDrop: [{\n      type: Output\n    }],\n    dndPlaceholderRef: [{\n      type: ContentChild,\n      args: [DndPlaceholderRefDirective]\n    }],\n    dndDisableIf: [{\n      type: Input\n    }],\n    dndDisableDropIf: [{\n      type: Input\n    }],\n    onDrop: [{\n      type: HostListener,\n      args: ['drop', ['$event']]\n    }]\n  });\n})();\nclass DndHandleDirective {\n  draggable = true;\n  dndDraggableDirective = inject(DndDraggableDirective);\n  ngOnInit() {\n    this.dndDraggableDirective.registerDragHandle(this);\n  }\n  onDragEvent(event) {\n    event._dndUsingHandle = true;\n  }\n  static ɵfac = function DndHandleDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DndHandleDirective)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: DndHandleDirective,\n    selectors: [[\"\", \"dndHandle\", \"\"]],\n    hostVars: 1,\n    hostBindings: function DndHandleDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"dragstart\", function DndHandleDirective_dragstart_HostBindingHandler($event) {\n          return ctx.onDragEvent($event);\n        })(\"dragend\", function DndHandleDirective_dragend_HostBindingHandler($event) {\n          return ctx.onDragEvent($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"draggable\", ctx.draggable);\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndHandleDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[dndHandle]',\n      standalone: true\n    }]\n  }], null, {\n    draggable: [{\n      type: HostBinding,\n      args: ['attr.draggable']\n    }],\n    onDragEvent: [{\n      type: HostListener,\n      args: ['dragstart', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['dragend', ['$event']]\n    }]\n  });\n})();\nclass DndModule {\n  static ɵfac = function DndModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DndModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DndModule,\n    imports: [DndDragImageRefDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDraggableDirective],\n    exports: [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DndModule, [{\n    type: NgModule,\n    args: [{\n      exports: [DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDragImageRefDirective],\n      imports: [DndDragImageRefDirective, DndDropzoneDirective, DndHandleDirective, DndPlaceholderRefDirective, DndDraggableDirective]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of dnd\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DndDragImageRefDirective, DndDraggableDirective, DndDropzoneDirective, DndHandleDirective, DndModule, DndPlaceholderRefDirective };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAM,eAAe,CAAC,QAAQ,QAAQ,MAAM;AAC5C,IAAM,mBAAmB;AACzB,IAAM,iBAAiB;AACvB,IAAM,iBAAiB;AACvB,SAAS,iBAAiB,UAAU;AAClC,SAAO,SAAS,OAAO,GAAG,iBAAiB,MAAM,MAAM;AACzD;AACA,SAAS,qBAAqB,OAAO;AACnC,MAAI,MAAM,cAAc;AACtB,UAAM,QAAQ,MAAM,aAAa;AAEjC,QAAI,CAAC,OAAO;AACV,aAAO;AAAA,IACT;AACA,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,UAAI,MAAM,CAAC,MAAM,kBAAkB,MAAM,CAAC,MAAM,kBAAkB,iBAAiB,MAAM,CAAC,CAAC,GAAG;AAC5F,eAAO,MAAM,CAAC;AAAA,MAChB;AAAA,IACF;AAAA,EACF;AACA,SAAO;AACT;AACA,SAAS,YAAY,OAAO,MAAM,eAAe;AAG/C,QAAM,WAAW,oBAAoB,KAAK,OAAO,MAAM,KAAK,OAAO;AACnE,QAAM,aAAa,KAAK,UAAU,IAAI;AACtC,MAAI;AACF,UAAM,cAAc,QAAQ,UAAU,UAAU;AAAA,EAClD,SAAS,GAAG;AAEV,QAAI;AACF,YAAM,cAAc,QAAQ,gBAAgB,UAAU;AAAA,IACxD,SAASA,IAAG;AAIV,YAAM,iBAAiB,cAAc,cAAc,aAAa;AAChE,UAAI,MAAM,cAAc;AACtB,cAAM,aAAa,gBAAgB,eAAe,CAAC;AAAA,MACrD;AACA,YAAM,cAAc,QAAQ,gBAAgB,UAAU;AAAA,IACxD;AAAA,EACF;AACF;AACA,SAAS,YAAY,OAAO,gBAAgB;AAE1C,QAAM,WAAW,qBAAqB,KAAK;AAE3C,MAAI,mBAAmB,MAAM;AAC3B,QAAI,aAAa,QAAQ,iBAAiB,QAAQ,GAAG;AAEnD,aAAO,KAAK,MAAM,MAAM,cAAc,QAAQ,QAAQ,KAAK,IAAI;AAAA,IACjE;AAEA,WAAO,CAAC;AAAA,EACV;AACA,MAAI,aAAa,MAAM;AAErB,WAAO,KAAK,MAAM,MAAM,cAAc,QAAQ,QAAQ,KAAK,IAAI;AAAA,EACjE;AAEA,SAAO,CAAC;AACV;AACA,SAAS,cAAc,SAAS,SAAS;AACvC,MAAI,YAAY,SAAS,YAAY,iBAAiB;AACpD,WAAO;AAAA,EACT;AACA,SAAO,QAAQ,OAAO,SAAU,QAAQ;AACtC,WAAO,QAAQ,YAAY,EAAE,QAAQ,MAAM,MAAM;AAAA,EACnD,CAAC;AACH;AACA,SAAS,sBAAsB,eAAe,cAAc;AAC1D,MAAI,cAAc;AAClB,SAAO,YAAY,eAAe,eAAe;AAE/C,QAAI,CAAC,YAAY,YAAY;AAC3B,aAAO;AAAA,IACT;AACA,kBAAc,YAAY;AAAA,EAC5B;AACA,SAAO;AACT;AACA,SAAS,uCAAuC,OAAO,SAAS,YAAY;AAC1E,QAAM,SAAS,QAAQ,sBAAsB;AAG7C,MAAI,YAAY;AACd,WAAO,MAAM,UAAU,OAAO,OAAO,OAAO,QAAQ;AAAA,EACtD;AACA,SAAO,MAAM,UAAU,OAAO,MAAM,OAAO,SAAS;AACtD;AACA,SAAS,yBAAyB,OAAO,WAAW;AAClD,QAAM,yBAAyB,OAAO,iBAAiB,SAAS;AAChE,QAAM,aAAa,WAAW,uBAAuB,UAAU,KAAK;AACpE,QAAM,cAAc,WAAW,uBAAuB,WAAW,KAAK;AACtE,QAAM,YAAY,WAAW,uBAAuB,cAAc,KAAK;AACvE,QAAM,aAAa,WAAW,uBAAuB,eAAe,KAAK;AACzE,SAAO;AAAA,IACL,GAAG,MAAM,UAAU,cAAc;AAAA,IACjC,GAAG,MAAM,UAAU,aAAa;AAAA,EAClC;AACF;AACA,SAAS,aAAa,OAAO,WAAW,gBAAgB;AACtD,QAAM,SAAS,eAAe,OAAO,SAAS,KAAK;AAAA,IACjD,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AACA,QAAM,aAAa,aAAa,WAAW,OAAO,GAAG,OAAO,CAAC;AAC/D;AACA,IAAM,YAAY;AAAA,EAChB,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,eAAe;AAAA,EACf,MAAM;AACR;AACA,SAAS,UAAU,OAAO,eAAe,MAAM;AAC7C,YAAU,aAAa;AACvB,YAAU,aAAa;AACvB,YAAU,gBAAgB;AAC1B,YAAU,OAAO;AACjB,MAAI,MAAM,cAAc;AACtB,UAAM,aAAa,gBAAgB;AAAA,EACrC;AACF;AACA,SAAS,UAAU;AACjB,YAAU,aAAa;AACvB,YAAU,aAAa;AACvB,YAAU,gBAAgB;AAC1B,YAAU,OAAO;AACnB;AACA,SAAS,cAAc,OAAO,YAAY;AACxC,MAAI,UAAU,eAAe,MAAM;AACjC,cAAU,aAAa;AAAA,EACzB;AACA,MAAI,MAAM,cAAc;AACtB,UAAM,aAAa,aAAa;AAAA,EAClC;AACF;AACA,SAAS,cAAc,OAAO,eAAe;AAC3C,QAAM,4BAA4B,MAAM,eAAe,MAAM,aAAa,gBAAgB;AAC1F,MAAI,UAAU,cAAc,cAAc,yBAAyB;AACnE,MAAI,UAAU,eAAe,MAAM;AACjC,cAAU,cAAc,SAAS,UAAU,aAAa;AAAA,EAC1D;AACA,MAAI,eAAe;AACjB,cAAU,cAAc,SAAS,aAAa;AAAA,EAChD;AAGA,MAAI,QAAQ,WAAW,GAAG;AACxB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,WAAW,QAAQ,QAAQ,MAAM,MAAM,IAAI;AACnD,WAAO;AAAA,EACT;AACA,MAAI,MAAM,UAAU,QAAQ,QAAQ,MAAM,MAAM,IAAI;AAClD,WAAO;AAAA,EACT;AACA,SAAO,QAAQ,CAAC;AAClB;AACA,SAAS,WAAW,OAAO;AACzB,MAAI,UAAU,eAAe,MAAM;AACjC,WAAO,UAAU;AAAA,EACnB;AACA,QAAM,WAAW,qBAAqB,KAAK;AAC3C,MAAI,aAAa,MAAM;AACrB,WAAO;AAAA,EACT;AACA,MAAI,aAAa,kBAAkB,aAAa,gBAAgB;AAC9D,WAAO;AAAA,EACT;AACA,SAAO,SAAS,OAAO,iBAAiB,SAAS,CAAC,KAAK;AACzD;AACA,SAAS,iBAAiB;AACxB,SAAO,UAAU,eAAe;AAClC;AACA,IAAM,WAAW;AACjB,IAAM,2BAAN,MAAM,0BAAyB;AAAA,EAC7B,wBAAwB,OAAO,WAAW,MAAM,qBAAqB,CAAC;AAAA,EACtE,aAAa,OAAO,UAAU;AAAA,EAC9B,WAAW;AACT,SAAK,sBAAsB,kBAAkB,KAAK,UAAU;AAAA,EAC9D;AAAA,EACA,OAAO,OAAO,SAAS,iCAAiC,mBAAmB;AACzE,WAAO,KAAK,qBAAqB,2BAA0B;AAAA,EAC7D;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,mBAAmB,EAAE,CAAC;AAAA,EACzC,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,0BAA0B,CAAC;AAAA,IACjG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;AACH,IAAM,wBAAN,MAAM,uBAAsB;AAAA,EAC1B;AAAA,EACA,mBAAmB;AAAA,EACnB;AAAA,EACA,mBAAmB;AAAA,EACnB,yBAAyB;AAAA,EACzB,4BAA4B;AAAA,EAC5B,6BAA6B;AAAA,EAC7B,WAAW,IAAI,aAAa;AAAA,EAC5B,UAAU,IAAI,aAAa;AAAA,EAC3B,SAAS,IAAI,aAAa;AAAA,EAC1B,WAAW,IAAI,aAAa;AAAA,EAC5B,YAAY,IAAI,aAAa;AAAA,EAC7B,YAAY,IAAI,aAAa;AAAA,EAC7B,cAAc,IAAI,aAAa;AAAA,EAC/B,YAAY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA,gBAAgB;AAAA,EAChB,aAAa,OAAO,UAAU;AAAA,EAC9B,WAAW,OAAO,SAAS;AAAA,EAC3B,SAAS,OAAO,MAAM;AAAA,EACtB,IAAI,aAAa,OAAO;AACtB,SAAK,YAAY,CAAC;AAClB,QAAI,KAAK,WAAW;AAClB,WAAK,SAAS,YAAY,KAAK,WAAW,eAAe,KAAK,yBAAyB;AAAA,IACzF,OAAO;AACL,WAAK,SAAS,SAAS,KAAK,WAAW,eAAe,KAAK,yBAAyB;AAAA,IACtF;AAAA,EACF;AAAA,EACA,IAAI,iBAAiB,OAAO;AAC1B,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,kBAAkB;AAChB,SAAK,OAAO,kBAAkB,MAAM;AAClC,WAAK,WAAW,cAAc,iBAAiB,QAAQ,KAAK,gBAAgB;AAAA,IAC9E,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,WAAW,cAAc,oBAAoB,QAAQ,KAAK,gBAAgB;AAC/E,QAAI,KAAK,eAAe;AACtB,cAAQ;AAAA,IACV;AAAA,EACF;AAAA,EACA,YAAY,OAAO;AACjB,QAAI,CAAC,KAAK,WAAW;AACnB,aAAO;AAAA,IACT;AAEA,QAAI,KAAK,aAAa,QAAQ,MAAM,mBAAmB,MAAM;AAC3D,YAAM,gBAAgB;AACtB,aAAO;AAAA,IACT;AAEA,cAAU,OAAO,KAAK,kBAAkB,KAAK,OAAO;AACpD,SAAK,gBAAgB;AACrB,gBAAY,OAAO;AAAA,MACjB,MAAM,KAAK;AAAA,MACX,MAAM,KAAK;AAAA,IACb,GAAG,SAAS,aAAa;AACzB,SAAK,YAAY,KAAK,mBAAmB;AAGzC,SAAK,SAAS,SAAS,KAAK,WAAW,KAAK,gBAAgB;AAG5D,QAAI,KAAK,0BAA0B,QAAQ,MAAM,mBAAmB,MAAM;AACxE,mBAAa,OAAO,KAAK,WAAW,KAAK,0BAA0B;AAAA,IACrE;AAEA,UAAM,aAAa,KAAK,SAAS,OAAO,KAAK,WAAW,eAAe,QAAQ,MAAM;AACnF,WAAK,SAAS,SAAS,KAAK,WAAW,eAAe,KAAK,sBAAsB;AACjF,iBAAW;AAAA,IACb,CAAC;AACD,SAAK,SAAS,KAAK,KAAK;AACxB,UAAM,gBAAgB;AACtB,eAAW,MAAM;AACf,WAAK,SAAS,SAAS,KAAK,WAAW,kBAAkB,MAAM;AAAA,IACjE,GAAG,GAAG;AACN,WAAO;AAAA,EACT;AAAA,EACA,OAAO,OAAO;AACZ,SAAK,QAAQ,KAAK,KAAK;AAAA,EACzB;AAAA,EACA,UAAU,OAAO;AACf,QAAI,CAAC,KAAK,aAAa,CAAC,KAAK,eAAe;AAC1C;AAAA,IACF;AAEA,UAAM,aAAa,SAAS;AAC5B,SAAK,SAAS,SAAS,KAAK,WAAW,kBAAkB,OAAO;AAChE,QAAI;AACJ,YAAQ,YAAY;AAAA,MAClB,KAAK;AACH,4BAAoB,KAAK;AACzB;AAAA,MACF,KAAK;AACH,4BAAoB,KAAK;AACzB;AAAA,MACF,KAAK;AACH,4BAAoB,KAAK;AACzB;AAAA,MACF;AACE,4BAAoB,KAAK;AACzB;AAAA,IACJ;AACA,sBAAkB,KAAK,KAAK;AAC5B,SAAK,OAAO,KAAK,KAAK;AAEtB,YAAQ;AACR,SAAK,gBAAgB;AACrB,SAAK,SAAS,YAAY,KAAK,WAAW,KAAK,gBAAgB;AAE/D,WAAO,WAAW,MAAM;AACtB,WAAK,SAAS,YAAY,KAAK,WAAW,eAAe,KAAK,sBAAsB;AAAA,IACtF,GAAG,CAAC;AACJ,UAAM,gBAAgB;AAAA,EACxB;AAAA,EACA,mBAAmB,QAAQ;AACzB,SAAK,YAAY;AAAA,EACnB;AAAA,EACA,kBAAkB,YAAY;AAC5B,SAAK,yBAAyB;AAAA,EAChC;AAAA,EACA,mBAAmB,WAAS,KAAK,OAAO,KAAK;AAAA,EAC7C,qBAAqB;AAEnB,QAAI,OAAO,KAAK,2BAA2B,aAAa;AACtD,aAAO,KAAK,uBAAuB;AAAA,IACrC,OAAO;AACL,aAAO,KAAK,WAAW;AAAA,IACzB;AAAA,EACF;AAAA,EACA,OAAO,OAAO,SAAS,8BAA8B,mBAAmB;AACtE,WAAO,KAAK,qBAAqB,wBAAuB;AAAA,EAC1D;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,gBAAgB,EAAE,CAAC;AAAA,IACpC,UAAU;AAAA,IACV,cAAc,SAAS,mCAAmC,IAAI,KAAK;AACjE,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,aAAa,SAAS,mDAAmD,QAAQ;AAC7F,iBAAO,IAAI,YAAY,MAAM;AAAA,QAC/B,CAAC,EAAE,WAAW,SAAS,iDAAiD,QAAQ;AAC9E,iBAAO,IAAI,UAAU,MAAM;AAAA,QAC7B,CAAC;AAAA,MACH;AACA,UAAI,KAAK,GAAG;AACV,QAAG,YAAY,aAAa,IAAI,SAAS;AAAA,MAC3C;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,SAAS;AAAA,MACT,kBAAkB;AAAA,MAClB,wBAAwB;AAAA,MACxB,2BAA2B;AAAA,MAC3B,4BAA4B;AAAA,MAC5B,cAAc;AAAA,MACd,kBAAkB;AAAA,IACpB;AAAA,IACA,SAAS;AAAA,MACP,UAAU;AAAA,MACV,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,WAAW;AAAA,MACX,aAAa;AAAA,IACf;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,uBAAuB,CAAC;AAAA,IAC9F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,wBAAwB,CAAC;AAAA,MACvB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,2BAA2B,CAAC;AAAA,MAC1B,MAAM;AAAA,IACR,CAAC;AAAA,IACD,4BAA4B,CAAC;AAAA,MAC3B,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,IACR,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC;AAAA,IAChC,CAAC;AAAA,IACD,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,6BAAN,MAAM,4BAA2B;AAAA,EAC/B;AAAA,EACA,YAAY,YAAY;AACtB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,WAAW;AAET,SAAK,WAAW,cAAc,MAAM,gBAAgB;AAAA,EACtD;AAAA,EACA,OAAO,OAAO,SAAS,mCAAmC,mBAAmB;AAC3E,WAAO,KAAK,qBAAqB,6BAA+B,kBAAqB,UAAU,CAAC;AAAA,EAClG;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,qBAAqB,EAAE,CAAC;AAAA,EAC3C,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,4BAA4B,CAAC;AAAA,IACnG,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,CAAC,GAAG,IAAI;AACV,GAAG;AACH,IAAM,uBAAN,MAAM,sBAAqB;AAAA,EACzB;AAAA,EACA;AAAA,EACA;AAAA,EACA,cAAc;AAAA,EACd,mBAAmB;AAAA,EACnB,mBAAmB;AAAA,EACnB,gBAAgB;AAAA,EAChB,mBAAmB;AAAA,EACnB,2BAA2B;AAAA,EAC3B,cAAc,IAAI,aAAa;AAAA,EAC/B,UAAU,IAAI,aAAa;AAAA,EAC3B;AAAA,EACA,cAAc;AAAA,EACd,WAAW;AAAA,EACX,YAAY,QAAQ,YAAY,UAAU;AACxC,SAAK,SAAS;AACd,SAAK,aAAa;AAClB,SAAK,WAAW;AAAA,EAClB;AAAA,EACA,IAAI,aAAa,OAAO;AACtB,SAAK,WAAW;AAChB,QAAI,KAAK,UAAU;AACjB,WAAK,SAAS,SAAS,KAAK,WAAW,eAAe,KAAK,wBAAwB;AAAA,IACrF,OAAO;AACL,WAAK,SAAS,YAAY,KAAK,WAAW,eAAe,KAAK,wBAAwB;AAAA,IACxF;AAAA,EACF;AAAA,EACA,IAAI,iBAAiB,OAAO;AAC1B,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,kBAAkB;AAChB,SAAK,cAAc,KAAK,kBAAkB;AAC1C,SAAK,yBAAyB;AAC9B,SAAK,OAAO,kBAAkB,MAAM;AAClC,WAAK,WAAW,cAAc,iBAAiB,aAAa,KAAK,qBAAqB;AACtF,WAAK,WAAW,cAAc,iBAAiB,YAAY,KAAK,oBAAoB;AACpF,WAAK,WAAW,cAAc,iBAAiB,aAAa,KAAK,qBAAqB;AAAA,IACxF,CAAC;AAAA,EACH;AAAA,EACA,cAAc;AACZ,SAAK,WAAW,cAAc,oBAAoB,aAAa,KAAK,qBAAqB;AACzF,SAAK,WAAW,cAAc,oBAAoB,YAAY,KAAK,oBAAoB;AACvF,SAAK,WAAW,cAAc,oBAAoB,aAAa,KAAK,qBAAqB;AAAA,EAC3F;AAAA,EACA,YAAY,OAAO;AAEjB,QAAI,MAAM,uBAAuB,MAAM;AACrC,WAAK,qBAAqB;AAC1B;AAAA,IACF;AAEA,QAAI,MAAM,sBAAsB,MAAM;AACpC,YAAM,YAAY,SAAS,iBAAiB,MAAM,SAAS,MAAM,OAAO;AACxE,UAAI,KAAK,WAAW,cAAc,SAAS,SAAS,GAAG;AACrD,cAAM,qBAAqB;AAAA,MAC7B;AAAA,IACF;AAEA,UAAM,OAAO,WAAW,KAAK;AAC7B,QAAI,CAAC,KAAK,cAAc,IAAI,GAAG;AAC7B;AAAA,IACF;AAEA,UAAM,eAAe;AAAA,EACvB;AAAA,EACA,WAAW,OAAO;AAMhB,QAAI,MAAM,kBAAkB;AAC1B;AAAA,IACF;AAEA,UAAM,OAAO,WAAW,KAAK;AAC7B,QAAI,CAAC,KAAK,cAAc,IAAI,GAAG;AAC7B;AAAA,IACF;AACA,SAAK,kCAAkC,KAAK;AAC5C,UAAM,aAAa,cAAc,OAAO,KAAK,gBAAgB;AAC7D,QAAI,eAAe,QAAQ;AACzB,WAAK,qBAAqB;AAC1B;AAAA,IACF;AAEA,UAAM,eAAe;AAErB,kBAAc,OAAO,UAAU;AAC/B,SAAK,YAAY,KAAK,KAAK;AAC3B,SAAK,SAAS,SAAS,KAAK,WAAW,eAAe,KAAK,gBAAgB;AAAA,EAC7E;AAAA,EACA,OAAO,OAAO;AACZ,QAAI;AAEF,YAAM,OAAO,WAAW,KAAK;AAC7B,UAAI,CAAC,KAAK,cAAc,IAAI,GAAG;AAC7B;AAAA,MACF;AACA,YAAM,OAAO,YAAY,OAAO,eAAe,CAAC;AAChD,UAAI,CAAC,KAAK,cAAc,KAAK,IAAI,GAAG;AAClC;AAAA,MACF;AAEA,YAAM,eAAe;AACrB,YAAM,aAAa,cAAc,KAAK;AACtC,oBAAc,OAAO,UAAU;AAC/B,UAAI,eAAe,QAAQ;AACzB;AAAA,MACF;AACA,YAAM,YAAY,KAAK,oBAAoB;AAI3C,UAAI,cAAc,IAAI;AACpB;AAAA,MACF;AACA,WAAK,QAAQ,KAAK;AAAA,QAChB;AAAA,QACA;AAAA,QACA,YAAY,eAAe;AAAA,QAC3B,MAAM,KAAK;AAAA,QACX,OAAO;AAAA,QACP;AAAA,MACF,CAAC;AACD,YAAM,gBAAgB;AAAA,IACxB,UAAE;AACA,WAAK,qBAAqB;AAAA,IAC5B;AAAA,EACF;AAAA,EACA,YAAY,OAAO;AACjB,UAAM,eAAe;AACrB,UAAM,gBAAgB;AAEtB,QAAI,MAAM,sBAAsB,MAAM;AACpC,UAAI,KAAK,WAAW,cAAc,SAAS,MAAM,aAAa,GAAG;AAC/D,cAAM,qBAAqB;AAC3B;AAAA,MACF;AAAA,IACF;AACA,SAAK,qBAAqB;AAE1B,kBAAc,OAAO,MAAM;AAAA,EAC7B;AAAA,EACA,wBAAwB,WAAS,KAAK,YAAY,KAAK;AAAA,EACvD,uBAAuB,WAAS,KAAK,WAAW,KAAK;AAAA,EACrD,wBAAwB,WAAS,KAAK,YAAY,KAAK;AAAA,EACvD,cAAc,MAAM;AAElB,QAAI,KAAK,UAAU;AACjB,aAAO;AAAA,IACT;AAGA,QAAI,eAAe,KAAK,CAAC,KAAK,kBAAkB;AAC9C,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,KAAK,aAAa;AACrB,aAAO;AAAA,IACT;AAEA,QAAI,CAAC,MAAM;AACT,aAAO;AAAA,IACT;AACA,QAAI,CAAC,MAAM,QAAQ,KAAK,WAAW,GAAG;AACpC,YAAM,IAAI,MAAM,6DAA6D;AAAA,IAC/E;AAEA,WAAO,KAAK,YAAY,QAAQ,IAAI,MAAM;AAAA,EAC5C;AAAA,EACA,oBAAoB;AAClB,QAAI,OAAO,KAAK,sBAAsB,aAAa;AACjD,aAAO,KAAK,kBAAkB,WAAW;AAAA,IAC3C;AAGA,WAAO,KAAK,WAAW,cAAc,cAAc,qBAAqB;AAAA,EAC1E;AAAA,EACA,2BAA2B;AACzB,QAAI,KAAK,gBAAgB,QAAQ,KAAK,YAAY,eAAe,MAAM;AACrE,WAAK,YAAY,WAAW,YAAY,KAAK,WAAW;AAAA,IAC1D;AAAA,EACF;AAAA,EACA,kCAAkC,OAAO;AACvC,QAAI,KAAK,gBAAgB,MAAM;AAC7B;AAAA,IACF;AAEA,QAAI,KAAK,YAAY,eAAe,KAAK,WAAW,eAAe;AACjE,WAAK,SAAS,YAAY,KAAK,WAAW,eAAe,KAAK,WAAW;AAAA,IAC3E;AAEA,UAAM,cAAc,sBAAsB,KAAK,WAAW,eAAe,MAAM,MAAM;AAErF,QAAI,gBAAgB,QAAQ,gBAAgB,KAAK,aAAa;AAC5D;AAAA,IACF;AACA,UAAM,uCAAuC,uCAAuC,OAAO,aAAa,KAAK,aAAa;AAC1H,QAAI,sCAAsC;AAExC,UAAI,YAAY,oBAAoB,KAAK,aAAa;AACpD,aAAK,SAAS,aAAa,KAAK,WAAW,eAAe,KAAK,aAAa,WAAW;AAAA,MACzF;AAAA,IACF,OAAO;AAEL,UAAI,YAAY,gBAAgB,KAAK,aAAa;AAChD,aAAK,SAAS,aAAa,KAAK,WAAW,eAAe,KAAK,aAAa,YAAY,WAAW;AAAA,MACrG;AAAA,IACF;AAAA,EACF;AAAA,EACA,sBAAsB;AACpB,QAAI,KAAK,gBAAgB,MAAM;AAC7B,aAAO;AAAA,IACT;AACA,UAAM,UAAU,KAAK,WAAW;AAChC,WAAO,MAAM,UAAU,QAAQ,KAAK,QAAQ,UAAU,KAAK,WAAW;AAAA,EACxE;AAAA,EACA,uBAAuB;AACrB,SAAK,SAAS,YAAY,KAAK,WAAW,eAAe,KAAK,gBAAgB;AAC9E,SAAK,yBAAyB;AAAA,EAChC;AAAA,EACA,OAAO,OAAO,SAAS,6BAA6B,mBAAmB;AACrE,WAAO,KAAK,qBAAqB,uBAAyB,kBAAqB,MAAM,GAAM,kBAAqB,UAAU,GAAM,kBAAqB,SAAS,CAAC;AAAA,EACjK;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,eAAe,EAAE,CAAC;AAAA,IACnC,gBAAgB,SAAS,oCAAoC,IAAI,KAAK,UAAU;AAC9E,UAAI,KAAK,GAAG;AACV,QAAG,eAAe,UAAU,4BAA4B,CAAC;AAAA,MAC3D;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,oBAAoB,GAAG;AAAA,MAC1E;AAAA,IACF;AAAA,IACA,cAAc,SAAS,kCAAkC,IAAI,KAAK;AAChE,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,QAAQ,SAAS,6CAA6C,QAAQ;AAClF,iBAAO,IAAI,OAAO,MAAM;AAAA,QAC1B,CAAC;AAAA,MACH;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,aAAa;AAAA,MACb,kBAAkB;AAAA,MAClB,kBAAkB;AAAA,MAClB,eAAe;AAAA,MACf,kBAAkB;AAAA,MAClB,0BAA0B;AAAA,MAC1B,cAAc;AAAA,MACd,kBAAkB;AAAA,IACpB;AAAA,IACA,SAAS;AAAA,MACP,aAAa;AAAA,MACb,SAAS;AAAA,IACX;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,sBAAsB,CAAC;AAAA,IAC7F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,GAAG;AAAA,IACD,MAAS;AAAA,EACX,CAAC,GAAG;AAAA,IACF,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,eAAe,CAAC;AAAA,MACd,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,0BAA0B,CAAC;AAAA,MACzB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,IACR,CAAC;AAAA,IACD,SAAS,CAAC;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,IACD,mBAAmB,CAAC;AAAA,MAClB,MAAM;AAAA,MACN,MAAM,CAAC,0BAA0B;AAAA,IACnC,CAAC;AAAA,IACD,cAAc,CAAC;AAAA,MACb,MAAM;AAAA,IACR,CAAC;AAAA,IACD,kBAAkB,CAAC;AAAA,MACjB,MAAM;AAAA,IACR,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAAA,IAC3B,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,qBAAN,MAAM,oBAAmB;AAAA,EACvB,YAAY;AAAA,EACZ,wBAAwB,OAAO,qBAAqB;AAAA,EACpD,WAAW;AACT,SAAK,sBAAsB,mBAAmB,IAAI;AAAA,EACpD;AAAA,EACA,YAAY,OAAO;AACjB,UAAM,kBAAkB;AAAA,EAC1B;AAAA,EACA,OAAO,OAAO,SAAS,2BAA2B,mBAAmB;AACnE,WAAO,KAAK,qBAAqB,qBAAoB;AAAA,EACvD;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,IAAI,aAAa,EAAE,CAAC;AAAA,IACjC,UAAU;AAAA,IACV,cAAc,SAAS,gCAAgC,IAAI,KAAK;AAC9D,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,aAAa,SAAS,gDAAgD,QAAQ;AAC1F,iBAAO,IAAI,YAAY,MAAM;AAAA,QAC/B,CAAC,EAAE,WAAW,SAAS,8CAA8C,QAAQ;AAC3E,iBAAO,IAAI,YAAY,MAAM;AAAA,QAC/B,CAAC;AAAA,MACH;AACA,UAAI,KAAK,GAAG;AACV,QAAG,YAAY,aAAa,IAAI,SAAS;AAAA,MAC3C;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,oBAAoB,CAAC;AAAA,IAC3F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,IACd,CAAC;AAAA,EACH,CAAC,GAAG,MAAM;AAAA,IACR,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,aAAa,CAAC;AAAA,MACZ,MAAM;AAAA,MACN,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC;AAAA,IAChC,GAAG;AAAA,MACD,MAAM;AAAA,MACN,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC;AACH,GAAG;AACH,IAAM,YAAN,MAAM,WAAU;AAAA,EACd,OAAO,OAAO,SAAS,kBAAkB,mBAAmB;AAC1D,WAAO,KAAK,qBAAqB,YAAW;AAAA,EAC9C;AAAA,EACA,OAAO,OAAyB,iBAAiB;AAAA,IAC/C,MAAM;AAAA,IACN,SAAS,CAAC,0BAA0B,sBAAsB,oBAAoB,4BAA4B,qBAAqB;AAAA,IAC/H,SAAS,CAAC,uBAAuB,sBAAsB,oBAAoB,4BAA4B,wBAAwB;AAAA,EACjI,CAAC;AAAA,EACD,OAAO,OAAyB,iBAAiB,CAAC,CAAC;AACrD;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,WAAW,CAAC;AAAA,IAClF,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,SAAS,CAAC,uBAAuB,sBAAsB,oBAAoB,4BAA4B,wBAAwB;AAAA,MAC/H,SAAS,CAAC,0BAA0B,sBAAsB,oBAAoB,4BAA4B,qBAAqB;AAAA,IACjI,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,IAAI;AAChB,GAAG;",
  "names": ["e"]
}
