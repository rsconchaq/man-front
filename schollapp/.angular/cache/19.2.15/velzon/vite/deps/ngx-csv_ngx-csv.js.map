{
  "version": 3,
  "sources": ["../../../../../../node_modules/ngx-csv/ngx-csv.js"],
  "sourcesContent": ["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar CsvConfigConsts = function () {\n  function CsvConfigConsts() {}\n  CsvConfigConsts.EOL = \"\\r\\n\";\n  CsvConfigConsts.BOM = \"\\ufeff\";\n  CsvConfigConsts.DEFAULT_FIELD_SEPARATOR = ',';\n  CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR = '.';\n  CsvConfigConsts.DEFAULT_QUOTE = '\"';\n  CsvConfigConsts.DEFAULT_SHOW_TITLE = false;\n  CsvConfigConsts.DEFAULT_TITLE = 'My Report';\n  CsvConfigConsts.DEFAULT_FILENAME = 'mycsv.csv';\n  CsvConfigConsts.DEFAULT_SHOW_LABELS = false;\n  CsvConfigConsts.DEFAULT_USE_BOM = true;\n  CsvConfigConsts.DEFAULT_HEADER = [];\n  CsvConfigConsts.DEFAULT_NO_DOWNLOAD = false;\n  CsvConfigConsts.DEFAULT_REMOVE_EMPTY_VALUES = false;\n  return CsvConfigConsts;\n}();\nexports.CsvConfigConsts = CsvConfigConsts;\nexports.ConfigDefaults = {\n  filename: CsvConfigConsts.DEFAULT_FILENAME,\n  fieldSeparator: CsvConfigConsts.DEFAULT_FIELD_SEPARATOR,\n  quoteStrings: CsvConfigConsts.DEFAULT_QUOTE,\n  decimalseparator: CsvConfigConsts.DEFAULT_DECIMAL_SEPARATOR,\n  showLabels: CsvConfigConsts.DEFAULT_SHOW_LABELS,\n  showTitle: CsvConfigConsts.DEFAULT_SHOW_TITLE,\n  title: CsvConfigConsts.DEFAULT_TITLE,\n  useBom: CsvConfigConsts.DEFAULT_USE_BOM,\n  headers: CsvConfigConsts.DEFAULT_HEADER,\n  noDownload: CsvConfigConsts.DEFAULT_NO_DOWNLOAD,\n  removeEmptyValues: CsvConfigConsts.DEFAULT_REMOVE_EMPTY_VALUES\n};\nvar ngxCsv = function () {\n  function ngxCsv(DataJSON, filename, options) {\n    this.csv = \"\";\n    var config = options || {};\n    this.data = typeof DataJSON != 'object' ? JSON.parse(DataJSON) : DataJSON;\n    this._options = objectAssign({}, exports.ConfigDefaults, config);\n    if (this._options.filename) {\n      this._options.filename = filename;\n    }\n    this.generateCsv();\n  }\n  /**\r\n   * Generate and Download Csv\r\n   */\n  ngxCsv.prototype.generateCsv = function () {\n    if (this._options.useBom) {\n      this.csv += CsvConfigConsts.BOM;\n    }\n    if (this._options.showTitle) {\n      this.csv += this._options.title + '\\r\\n\\n';\n    }\n    this.getHeaders();\n    this.getBody();\n    if (this.csv == '') {\n      console.log(\"Invalid data\");\n      return;\n    }\n    if (this._options.noDownload) {\n      return this.csv;\n    }\n    var blob = new Blob([this.csv], {\n      \"type\": \"text/csv;charset=utf8;\"\n    });\n    if (navigator.msSaveBlob) {\n      var filename = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n      navigator.msSaveBlob(blob, filename);\n    } else {\n      var uri = 'data:attachment/csv;charset=utf-8,' + encodeURI(this.csv);\n      var link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.setAttribute('visibility', 'hidden');\n      link.download = this._options.filename.replace(/ /g, \"_\") + \".csv\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  };\n  /**\r\n   * Create Headers\r\n   */\n  ngxCsv.prototype.getHeaders = function () {\n    var _this = this;\n    if (this._options.headers.length > 0) {\n      var headers = this._options.headers;\n      var row = headers.reduce(function (headerRow, header) {\n        return headerRow + header + _this._options.fieldSeparator;\n      }, '');\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  };\n  /**\r\n   * Create Body\r\n   */\n  ngxCsv.prototype.getBody = function () {\n    for (var i = 0; i < this.data.length; i++) {\n      var row = \"\";\n      for (var index in this.data[i]) {\n        row += this.formartData(this.data[i][index]) + this._options.fieldSeparator;\n      }\n      row = row.slice(0, -1);\n      this.csv += row + CsvConfigConsts.EOL;\n    }\n  };\n  /**\r\n   * Format Data\r\n   * @param {any} data\r\n   */\n  ngxCsv.prototype.formartData = function (data) {\n    if (this._options.removeEmptyValues && !data) {\n      return \"\";\n    }\n    if (this._options.decimalseparator === 'locale' && ngxCsv.isFloat(data)) {\n      return data.toLocaleString();\n    }\n    if (this._options.decimalseparator !== '.' && ngxCsv.isFloat(data)) {\n      return data.toString().replace('.', this._options.decimalseparator);\n    }\n    if (typeof data === 'string') {\n      data = data.replace(/\"/g, '\"\"');\n      if (this._options.quoteStrings || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) {\n        data = this._options.quoteStrings + data + this._options.quoteStrings;\n      }\n      return data;\n    }\n    if (typeof data === 'boolean') {\n      return data ? 'TRUE' : 'FALSE';\n    }\n    return data;\n  };\n  /**\r\n   * Get CSV String\r\n   */\n  ngxCsv.prototype.getCsv = function () {\n    return this.csv;\n  };\n  /**\r\n   * Check if is Float\r\n   * @param {any} input\r\n   */\n  ngxCsv.isFloat = function (input) {\n    return +input === input && (!isFinite(input) || Boolean(input % 1));\n  };\n  return ngxCsv;\n}();\nexports.ngxCsv = ngxCsv;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n/**\r\n * Convet to Object\r\n * @param {any} val\r\n */\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n  return Object(val);\n}\n/**\r\n * Assign data  to new Object\r\n * @param {any}   target\r\n * @param {any[]} ...source\r\n */\nfunction objectAssign(target) {\n  var source = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    source[_i - 1] = arguments[_i];\n  }\n  var from;\n  var to = toObject(target);\n  var symbols;\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n    if (Object.getOwnPropertySymbols) {\n      symbols = Object.getOwnPropertySymbols(from);\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n  return to;\n}\n"],
  "mappings": ";;;;;AAAA;AAAA;AAEA,WAAO,eAAe,SAAS,cAAc;AAAA,MAC3C,OAAO;AAAA,IACT,CAAC;AACD,QAAI,kBAAkB,WAAY;AAChC,eAASA,mBAAkB;AAAA,MAAC;AAC5B,MAAAA,iBAAgB,MAAM;AACtB,MAAAA,iBAAgB,MAAM;AACtB,MAAAA,iBAAgB,0BAA0B;AAC1C,MAAAA,iBAAgB,4BAA4B;AAC5C,MAAAA,iBAAgB,gBAAgB;AAChC,MAAAA,iBAAgB,qBAAqB;AACrC,MAAAA,iBAAgB,gBAAgB;AAChC,MAAAA,iBAAgB,mBAAmB;AACnC,MAAAA,iBAAgB,sBAAsB;AACtC,MAAAA,iBAAgB,kBAAkB;AAClC,MAAAA,iBAAgB,iBAAiB,CAAC;AAClC,MAAAA,iBAAgB,sBAAsB;AACtC,MAAAA,iBAAgB,8BAA8B;AAC9C,aAAOA;AAAA,IACT,EAAE;AACF,YAAQ,kBAAkB;AAC1B,YAAQ,iBAAiB;AAAA,MACvB,UAAU,gBAAgB;AAAA,MAC1B,gBAAgB,gBAAgB;AAAA,MAChC,cAAc,gBAAgB;AAAA,MAC9B,kBAAkB,gBAAgB;AAAA,MAClC,YAAY,gBAAgB;AAAA,MAC5B,WAAW,gBAAgB;AAAA,MAC3B,OAAO,gBAAgB;AAAA,MACvB,QAAQ,gBAAgB;AAAA,MACxB,SAAS,gBAAgB;AAAA,MACzB,YAAY,gBAAgB;AAAA,MAC5B,mBAAmB,gBAAgB;AAAA,IACrC;AACA,QAAI,SAAS,WAAY;AACvB,eAASC,QAAO,UAAU,UAAU,SAAS;AAC3C,aAAK,MAAM;AACX,YAAI,SAAS,WAAW,CAAC;AACzB,aAAK,OAAO,OAAO,YAAY,WAAW,KAAK,MAAM,QAAQ,IAAI;AACjE,aAAK,WAAW,aAAa,CAAC,GAAG,QAAQ,gBAAgB,MAAM;AAC/D,YAAI,KAAK,SAAS,UAAU;AAC1B,eAAK,SAAS,WAAW;AAAA,QAC3B;AACA,aAAK,YAAY;AAAA,MACnB;AAIA,MAAAA,QAAO,UAAU,cAAc,WAAY;AACzC,YAAI,KAAK,SAAS,QAAQ;AACxB,eAAK,OAAO,gBAAgB;AAAA,QAC9B;AACA,YAAI,KAAK,SAAS,WAAW;AAC3B,eAAK,OAAO,KAAK,SAAS,QAAQ;AAAA,QACpC;AACA,aAAK,WAAW;AAChB,aAAK,QAAQ;AACb,YAAI,KAAK,OAAO,IAAI;AAClB,kBAAQ,IAAI,cAAc;AAC1B;AAAA,QACF;AACA,YAAI,KAAK,SAAS,YAAY;AAC5B,iBAAO,KAAK;AAAA,QACd;AACA,YAAI,OAAO,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG;AAAA,UAC9B,QAAQ;AAAA,QACV,CAAC;AACD,YAAI,UAAU,YAAY;AACxB,cAAI,WAAW,KAAK,SAAS,SAAS,QAAQ,MAAM,GAAG,IAAI;AAC3D,oBAAU,WAAW,MAAM,QAAQ;AAAA,QACrC,OAAO;AACL,cAAI,MAAM,uCAAuC,UAAU,KAAK,GAAG;AACnE,cAAI,OAAO,SAAS,cAAc,GAAG;AACrC,eAAK,OAAO,IAAI,gBAAgB,IAAI;AACpC,eAAK,aAAa,cAAc,QAAQ;AACxC,eAAK,WAAW,KAAK,SAAS,SAAS,QAAQ,MAAM,GAAG,IAAI;AAC5D,mBAAS,KAAK,YAAY,IAAI;AAC9B,eAAK,MAAM;AACX,mBAAS,KAAK,YAAY,IAAI;AAAA,QAChC;AAAA,MACF;AAIA,MAAAA,QAAO,UAAU,aAAa,WAAY;AACxC,YAAI,QAAQ;AACZ,YAAI,KAAK,SAAS,QAAQ,SAAS,GAAG;AACpC,cAAI,UAAU,KAAK,SAAS;AAC5B,cAAI,MAAM,QAAQ,OAAO,SAAU,WAAW,QAAQ;AACpD,mBAAO,YAAY,SAAS,MAAM,SAAS;AAAA,UAC7C,GAAG,EAAE;AACL,gBAAM,IAAI,MAAM,GAAG,EAAE;AACrB,eAAK,OAAO,MAAM,gBAAgB;AAAA,QACpC;AAAA,MACF;AAIA,MAAAA,QAAO,UAAU,UAAU,WAAY;AACrC,iBAAS,IAAI,GAAG,IAAI,KAAK,KAAK,QAAQ,KAAK;AACzC,cAAI,MAAM;AACV,mBAAS,SAAS,KAAK,KAAK,CAAC,GAAG;AAC9B,mBAAO,KAAK,YAAY,KAAK,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,SAAS;AAAA,UAC/D;AACA,gBAAM,IAAI,MAAM,GAAG,EAAE;AACrB,eAAK,OAAO,MAAM,gBAAgB;AAAA,QACpC;AAAA,MACF;AAKA,MAAAA,QAAO,UAAU,cAAc,SAAU,MAAM;AAC7C,YAAI,KAAK,SAAS,qBAAqB,CAAC,MAAM;AAC5C,iBAAO;AAAA,QACT;AACA,YAAI,KAAK,SAAS,qBAAqB,YAAYA,QAAO,QAAQ,IAAI,GAAG;AACvE,iBAAO,KAAK,eAAe;AAAA,QAC7B;AACA,YAAI,KAAK,SAAS,qBAAqB,OAAOA,QAAO,QAAQ,IAAI,GAAG;AAClE,iBAAO,KAAK,SAAS,EAAE,QAAQ,KAAK,KAAK,SAAS,gBAAgB;AAAA,QACpE;AACA,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO,KAAK,QAAQ,MAAM,IAAI;AAC9B,cAAI,KAAK,SAAS,gBAAgB,KAAK,QAAQ,GAAG,IAAI,MAAM,KAAK,QAAQ,IAAI,IAAI,MAAM,KAAK,QAAQ,IAAI,IAAI,IAAI;AAC9G,mBAAO,KAAK,SAAS,eAAe,OAAO,KAAK,SAAS;AAAA,UAC3D;AACA,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,SAAS,WAAW;AAC7B,iBAAO,OAAO,SAAS;AAAA,QACzB;AACA,eAAO;AAAA,MACT;AAIA,MAAAA,QAAO,UAAU,SAAS,WAAY;AACpC,eAAO,KAAK;AAAA,MACd;AAKA,MAAAA,QAAO,UAAU,SAAU,OAAO;AAChC,eAAO,CAAC,UAAU,UAAU,CAAC,SAAS,KAAK,KAAK,QAAQ,QAAQ,CAAC;AAAA,MACnE;AACA,aAAOA;AAAA,IACT,EAAE;AACF,YAAQ,SAAS;AACjB,QAAI,iBAAiB,OAAO,UAAU;AACtC,QAAI,mBAAmB,OAAO,UAAU;AAKxC,aAAS,SAAS,KAAK;AACrB,UAAI,QAAQ,QAAQ,QAAQ,QAAW;AACrC,cAAM,IAAI,UAAU,uDAAuD;AAAA,MAC7E;AACA,aAAO,OAAO,GAAG;AAAA,IACnB;AAMA,aAAS,aAAa,QAAQ;AAC5B,UAAI,SAAS,CAAC;AACd,eAAS,KAAK,GAAG,KAAK,UAAU,QAAQ,MAAM;AAC5C,eAAO,KAAK,CAAC,IAAI,UAAU,EAAE;AAAA,MAC/B;AACA,UAAI;AACJ,UAAI,KAAK,SAAS,MAAM;AACxB,UAAI;AACJ,eAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,eAAO,OAAO,UAAU,CAAC,CAAC;AAC1B,iBAAS,OAAO,MAAM;AACpB,cAAI,eAAe,KAAK,MAAM,GAAG,GAAG;AAClC,eAAG,GAAG,IAAI,KAAK,GAAG;AAAA,UACpB;AAAA,QACF;AACA,YAAI,OAAO,uBAAuB;AAChC,oBAAU,OAAO,sBAAsB,IAAI;AAC3C,mBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACvC,gBAAI,iBAAiB,KAAK,MAAM,QAAQ,CAAC,CAAC,GAAG;AAC3C,iBAAG,QAAQ,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;AAAA,YAClC;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAAA;AAAA;",
  "names": ["CsvConfigConsts", "ngxCsv"]
}
