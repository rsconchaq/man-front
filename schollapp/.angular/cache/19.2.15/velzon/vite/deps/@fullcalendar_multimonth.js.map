{
  "version": 3,
  "sources": ["../../../../../../node_modules/@fullcalendar/multimonth/index.js"],
  "sourcesContent": ["import { createPlugin } from '@fullcalendar/core/index.js';\nimport { buildDayTableModel, DayTableSlicer, TableRows, buildDayTableRenderRange, TableDateProfileGenerator } from '@fullcalendar/daygrid/internal.js';\nimport { DateComponent, memoize, getUniqueDomId, DayHeader, ViewContainer, formatIsoMonthStr, isPropsEqual, createDuration, intersectRanges, createFormatter, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef } from '@fullcalendar/core/preact.js';\nclass SingleMonth extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.buildDayTableModel = memoize(buildDayTableModel);\n    this.slicer = new DayTableSlicer();\n    this.state = {\n      labelId: getUniqueDomId()\n    };\n  }\n  render() {\n    const {\n      props,\n      state,\n      context\n    } = this;\n    const {\n      dateProfile,\n      forPrint\n    } = props;\n    const {\n      options\n    } = context;\n    const dayTableModel = this.buildDayTableModel(dateProfile, context.dateProfileGenerator);\n    const slicedProps = this.slicer.sliceProps(props, dateProfile, options.nextDayThreshold, context, dayTableModel);\n    // ensure single-month has aspect ratio\n    const tableHeight = props.tableWidth != null ? props.tableWidth / options.aspectRatio : null;\n    const rowCnt = dayTableModel.cells.length;\n    const rowHeight = tableHeight != null ? tableHeight / rowCnt : null;\n    return createElement(\"div\", {\n      ref: props.elRef,\n      \"data-date\": props.isoDateStr,\n      className: \"fc-multimonth-month\",\n      style: {\n        width: props.width\n      },\n      role: \"grid\",\n      \"aria-labelledby\": state.labelId\n    }, createElement(\"div\", {\n      className: \"fc-multimonth-header\",\n      style: {\n        marginBottom: rowHeight\n      },\n      role: \"presentation\"\n    }, createElement(\"div\", {\n      className: \"fc-multimonth-title\",\n      id: state.labelId\n    }, context.dateEnv.format(props.dateProfile.currentRange.start, props.titleFormat)), createElement(\"table\", {\n      className: ['fc-multimonth-header-table', context.theme.getClass('table')].join(' '),\n      role: \"presentation\"\n    }, createElement(\"thead\", {\n      role: \"rowgroup\"\n    }, createElement(DayHeader, {\n      dateProfile: props.dateProfile,\n      dates: dayTableModel.headerDates,\n      datesRepDistinctDays: false\n    })))), createElement(\"div\", {\n      className: ['fc-multimonth-daygrid', 'fc-daygrid', 'fc-daygrid-body', !forPrint && 'fc-daygrid-body-balanced', forPrint && 'fc-daygrid-body-unbalanced', forPrint && 'fc-daygrid-body-natural'].join(' '),\n      style: {\n        marginTop: -rowHeight\n      }\n    }, createElement(\"table\", {\n      className: ['fc-multimonth-daygrid-table', context.theme.getClass('table')].join(' '),\n      style: {\n        height: forPrint ? '' : tableHeight\n      },\n      role: \"presentation\"\n    }, createElement(\"tbody\", {\n      role: \"rowgroup\"\n    }, createElement(TableRows, Object.assign({}, slicedProps, {\n      dateProfile: dateProfile,\n      cells: dayTableModel.cells,\n      eventSelection: props.eventSelection,\n      dayMaxEvents: !forPrint,\n      dayMaxEventRows: !forPrint,\n      showWeekNumbers: options.weekNumbers,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight,\n      forPrint: forPrint\n    }))))));\n  }\n}\nclass MultiMonthView extends DateComponent {\n  constructor() {\n    super(...arguments);\n    this.splitDateProfileByMonth = memoize(splitDateProfileByMonth);\n    this.buildMonthFormat = memoize(buildMonthFormat);\n    this.scrollElRef = createRef();\n    this.firstMonthElRef = createRef();\n    this.needsScrollReset = false;\n    this.handleSizing = isForced => {\n      if (isForced) {\n        this.updateSize();\n      }\n    };\n  }\n  render() {\n    const {\n      context,\n      props,\n      state\n    } = this;\n    const {\n      options\n    } = context;\n    const {\n      clientWidth,\n      clientHeight\n    } = state;\n    const monthHPadding = state.monthHPadding || 0;\n    const colCount = Math.min(clientWidth != null ? Math.floor(clientWidth / (options.multiMonthMinWidth + monthHPadding)) : 1, options.multiMonthMaxColumns) || 1;\n    const monthWidthPct = 100 / colCount + '%';\n    const monthTableWidth = clientWidth == null ? null : clientWidth / colCount - monthHPadding;\n    const isLegitSingleCol = clientWidth != null && colCount === 1;\n    const monthDateProfiles = this.splitDateProfileByMonth(context.dateProfileGenerator, props.dateProfile, context.dateEnv, isLegitSingleCol ? false : options.fixedWeekCount, options.showNonCurrentDates);\n    const monthTitleFormat = this.buildMonthFormat(options.multiMonthTitleFormat, monthDateProfiles);\n    const rootClassNames = ['fc-multimonth', isLegitSingleCol ? 'fc-multimonth-singlecol' : 'fc-multimonth-multicol', monthTableWidth != null && monthTableWidth < 400 ? 'fc-multimonth-compact' : ''];\n    return createElement(ViewContainer, {\n      elRef: this.scrollElRef,\n      elClasses: rootClassNames,\n      viewSpec: context.viewSpec\n    }, monthDateProfiles.map((monthDateProfile, i) => {\n      const monthStr = formatIsoMonthStr(monthDateProfile.currentRange.start);\n      return createElement(SingleMonth, Object.assign({}, props, {\n        key: monthStr,\n        isoDateStr: monthStr,\n        elRef: i === 0 ? this.firstMonthElRef : undefined,\n        titleFormat: monthTitleFormat,\n        dateProfile: monthDateProfile,\n        width: monthWidthPct,\n        tableWidth: monthTableWidth,\n        clientWidth: clientWidth,\n        clientHeight: clientHeight\n      }));\n    }));\n  }\n  componentDidMount() {\n    this.updateSize();\n    this.context.addResizeHandler(this.handleSizing);\n    this.requestScrollReset();\n  }\n  componentDidUpdate(prevProps) {\n    if (!isPropsEqual(prevProps, this.props)) {\n      // an external change?\n      this.handleSizing(false);\n    }\n    if (prevProps.dateProfile !== this.props.dateProfile) {\n      this.requestScrollReset();\n    } else {\n      this.flushScrollReset();\n    }\n  }\n  componentWillUnmount() {\n    this.context.removeResizeHandler(this.handleSizing);\n  }\n  updateSize() {\n    const scrollEl = this.scrollElRef.current;\n    const firstMonthEl = this.firstMonthElRef.current;\n    if (scrollEl) {\n      this.setState({\n        clientWidth: scrollEl.clientWidth,\n        clientHeight: scrollEl.clientHeight\n      });\n    }\n    if (firstMonthEl && scrollEl) {\n      if (this.state.monthHPadding == null) {\n        // always remember initial non-zero value\n        this.setState({\n          monthHPadding: scrollEl.clientWidth -\n          // go within padding\n          firstMonthEl.firstChild.offsetWidth\n        });\n      }\n    }\n  }\n  requestScrollReset() {\n    this.needsScrollReset = true;\n    this.flushScrollReset();\n  }\n  flushScrollReset() {\n    if (this.needsScrollReset && this.state.monthHPadding != null // indicates sizing already happened\n    ) {\n      const {\n        currentDate\n      } = this.props.dateProfile;\n      const scrollEl = this.scrollElRef.current;\n      const monthEl = scrollEl.querySelector(`[data-date=\"${formatIsoMonthStr(currentDate)}\"]`);\n      scrollEl.scrollTop = monthEl.getBoundingClientRect().top - this.firstMonthElRef.current.getBoundingClientRect().top;\n      this.needsScrollReset = false;\n    }\n  }\n  // workaround for when queued setState render (w/ clientWidth) gets cancelled because\n  // subsequent update and shouldComponentUpdate says not to render :(\n  shouldComponentUpdate() {\n    return true;\n  }\n}\n// date profile\n// -------------------------------------------------------------------------------------------------\nconst oneMonthDuration = createDuration(1, 'month');\nfunction splitDateProfileByMonth(dateProfileGenerator, dateProfile, dateEnv, fixedWeekCount, showNonCurrentDates) {\n  const {\n    start,\n    end\n  } = dateProfile.currentRange;\n  let monthStart = start;\n  const monthDateProfiles = [];\n  while (monthStart.valueOf() < end.valueOf()) {\n    const monthEnd = dateEnv.add(monthStart, oneMonthDuration);\n    const currentRange = {\n      // yuck\n      start: dateProfileGenerator.skipHiddenDays(monthStart),\n      end: dateProfileGenerator.skipHiddenDays(monthEnd, -1, true)\n    };\n    let renderRange = buildDayTableRenderRange({\n      currentRange,\n      snapToWeek: true,\n      fixedWeekCount,\n      dateEnv\n    });\n    renderRange = {\n      // yuck\n      start: dateProfileGenerator.skipHiddenDays(renderRange.start),\n      end: dateProfileGenerator.skipHiddenDays(renderRange.end, -1, true)\n    };\n    const activeRange = dateProfile.activeRange ? intersectRanges(dateProfile.activeRange, showNonCurrentDates ? renderRange : currentRange) : null;\n    monthDateProfiles.push({\n      currentDate: dateProfile.currentDate,\n      isValid: dateProfile.isValid,\n      validRange: dateProfile.validRange,\n      renderRange,\n      activeRange,\n      currentRange,\n      currentRangeUnit: 'month',\n      isRangeAllDay: true,\n      dateIncrement: dateProfile.dateIncrement,\n      slotMinTime: dateProfile.slotMaxTime,\n      slotMaxTime: dateProfile.slotMinTime\n    });\n    monthStart = monthEnd;\n  }\n  return monthDateProfiles;\n}\n// date formatting\n// -------------------------------------------------------------------------------------------------\nconst YEAR_MONTH_FORMATTER = createFormatter({\n  year: 'numeric',\n  month: 'long'\n});\nconst YEAR_FORMATTER = createFormatter({\n  month: 'long'\n});\nfunction buildMonthFormat(formatOverride, monthDateProfiles) {\n  return formatOverride || (monthDateProfiles[0].currentRange.start.getUTCFullYear() !== monthDateProfiles[monthDateProfiles.length - 1].currentRange.start.getUTCFullYear() ? YEAR_MONTH_FORMATTER : YEAR_FORMATTER);\n}\nconst OPTION_REFINERS = {\n  multiMonthTitleFormat: createFormatter,\n  multiMonthMaxColumns: Number,\n  multiMonthMinWidth: Number\n};\nvar css_248z = \".fc .fc-multimonth{border:1px solid var(--fc-border-color);display:flex;flex-wrap:wrap;overflow-x:hidden;overflow-y:auto}.fc .fc-multimonth-title{font-size:1.2em;font-weight:700;padding:1em 0;text-align:center}.fc .fc-multimonth-daygrid{background:var(--fc-page-bg-color)}.fc .fc-multimonth-daygrid-table,.fc .fc-multimonth-header-table{table-layout:fixed;width:100%}.fc .fc-multimonth-daygrid-table{border-top-style:hidden!important}.fc .fc-multimonth-singlecol .fc-multimonth{position:relative}.fc .fc-multimonth-singlecol .fc-multimonth-header{background:var(--fc-page-bg-color);position:relative;top:0;z-index:2}.fc .fc-multimonth-singlecol .fc-multimonth-daygrid{position:relative;z-index:1}.fc .fc-multimonth-singlecol .fc-multimonth-daygrid-table,.fc .fc-multimonth-singlecol .fc-multimonth-header-table{border-left-style:hidden;border-right-style:hidden}.fc .fc-multimonth-singlecol .fc-multimonth-month:last-child .fc-multimonth-daygrid-table{border-bottom-style:hidden}.fc .fc-multimonth-multicol{line-height:1}.fc .fc-multimonth-multicol .fc-multimonth-month{padding:0 1.2em 1.2em}.fc .fc-multimonth-multicol .fc-daygrid-more-link{border:1px solid var(--fc-event-border-color);display:block;float:none;padding:1px}.fc .fc-multimonth-compact{line-height:1}.fc .fc-multimonth-compact .fc-multimonth-daygrid-table,.fc .fc-multimonth-compact .fc-multimonth-header-table{font-size:.9em}.fc-media-screen .fc-multimonth-singlecol .fc-multimonth-header{position:sticky}.fc-media-print .fc-multimonth{overflow:visible}\";\ninjectStyles(css_248z);\nvar index = createPlugin({\n  name: '@fullcalendar/multimonth',\n  initialView: 'multiMonthYear',\n  optionRefiners: OPTION_REFINERS,\n  views: {\n    multiMonth: {\n      component: MultiMonthView,\n      dateProfileGeneratorClass: TableDateProfileGenerator,\n      multiMonthMinWidth: 350,\n      multiMonthMaxColumns: 3\n    },\n    multiMonthYear: {\n      type: 'multiMonth',\n      duration: {\n        years: 1\n      },\n      fixedWeekCount: true,\n      showNonCurrentDates: false\n    }\n  }\n});\nexport { index as default };"],
  "mappings": "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",
  "names": []
}
